image: node:20
options:
  docker: true

pipelines:
  branches:
    main:
      - step:
          name: Build Front-end
          caches:
            - node
          script:
            - cd front-end
            - npm install
            - npm run build
          artifacts:
            - front-end/build/**
      - step:
          name: Build Back-end
          image: maven:3.8-openjdk-17
          caches:
            - maven
          script:
            - cd back-end
            - cp -r ../front-end/build/* src/main/resources/static/
            - mvn clean package -DskipTests
          artifacts:
            - back-end/target/*.jar
            - back-end/src/main/resources/static/**
      - step:
          name: Deploy to Server
          deployment: production
          script:
            - pipe: atlassian/scp-deploy:0.3.14
              variables:
                USER: $SERVER_USERNAME
                SERVER: $SERVER_IP
                REMOTE_PATH: "/root/codereview/code-review-app"
                LOCAL_PATH: "front-end/build/* back-end/target/*.jar Dockerfile docker-compose.yml"
                EXTRA_ARGS: "--recursive"
            - pipe: atlassian/ssh-run:0.4.0
              variables:
                SSH_USER: $SERVER_USERNAME
                SERVER: $SERVER_IP
                COMMAND: |
                  echo "Starting Postgres container"
                  docker start postgres || docker run -d --name postgres -e POSTGRES_DB=$POSTGRES_DB -e POSTGRES_USER=$POSTGRES_USER -e POSTGRES_PASSWORD=$POSTGRES_PASSWORD -v postgres_data:/var/lib/postgresql/data postgres:latest
                  echo "Building Docker image on server"
                  cd /root/codereview/code-review-app
                  docker build -t code-review-app:latest .
                  echo "Stopping and removing existing container"
                  docker stop code-review-app || true
                  docker rm code-review-app || true
                  echo "Starting new container"
                  docker run -d --name code-review-app -p 8080:8080 --link postgres:postgres -e SPRING_DATASOURCE_URL=$SPRING_DATASOURCE_URL -e SPRING_DATASOURCE_USERNAME=$SPRING_DATASOURCE_USERNAME -e SPRING_DATASOURCE_PASSWORD=$SPRING_DATASOURCE_PASSWORD code-review-app:latest
